{% extends '@Pimterest/base.html.twig' %}

{% block container %}
    <div id="wall">
    </div>
{% endblock %}

{% block inline_javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="{{ asset('bundles/pimterest/js/Autolinker.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/pimterest/ios-loader/js/iosOverlay.js') }}"></script>
    <script type="text/javascript" src="{{ asset('bundles/pimterest/ios-loader/js/spin.min.js') }}"></script>
    <script>
        $container = $('#wall');
        is_processing = false;
        last_page = false;
        page = 1;
        notification = null;

        function onError(element) {
            $(element).parent().remove();
        }

        function startLoading() {
            var opts = {
                lines: 13, // The number of lines to draw
                length: 11, // The length of each line
                width: 5, // The line thickness
                radius: 17, // The radius of the inner circle
                corners: 1, // Corner roundness (0..1)
                rotate: 0, // The rotation offset
                color: '#FFF', // #rgb or #rrggbb
                speed: 1, // Rounds per second
                trail: 60, // Afterglow percentage
                shadow: false, // Whether to render a shadow
                hwaccel: false, // Whether to use hardware acceleration
                className: 'spinner', // The CSS class to assign to the spinner
                zIndex: 2e9, // The z-index (defaults to 2000000000)
                top: 'auto', // Top position relative to parent in px
                left: 'auto' // Left position relative to parent in px
            };
            var target = document.createElement("div");
            document.body.appendChild(target);
            var spinner = new Spinner(opts).spin(target);
            notification = iosOverlay({
                text: "Loading",
                spinner: spinner
            });
        }

        function stopLoading() {
            notification.hide();
        }

        function addMoreElements() {
            startLoading();
            is_processing = true;
            $.ajax({
                type: "GET",
                //FOS Routing
                url: 'rest/contributions?page=' + page,
                success: function(data) {
                    var elements = [];
                    if (data.length > 0) {
                        _.forEach(data, function(contrib) {
                            var div = cardTemplate(contrib);
//                            $container.append(div);
                            elements.push(div);
                        });

                        console.log(elements);

                        page = page + 1;
                        //The server can answer saying it's the last page so that the browser doesn't make anymore calls
//                        last_page = data.last_page;
                    } else {
                        last_page = true;
                    }

                    var elementsinline = elements.join('');
                    console.log(elementsinline);
                    var $elementsinline = $(elementsinline);
//                    $container.append($elementsinline).masonry( 'appended', $elementsinline, true );
                    $container.append($elementsinline).imagesLoaded(function(){
                        $container.masonry( 'appended', $elementsinline, true );
                        is_processing = false;
                        stopLoading();
                    });

                },
                error: function(data) {
                    is_processing = false;
                    stopLoading();
                }
            });
        }

        function cardTemplate(contrib) {
            return '<div class="item '+contrib.source+'">'+
                    '<img onerror="onError(this)" src="'+contrib.mediaurl+'" />' +
                    '<p class="txtbox">'+Autolinker.link(contrib.content)+'</p>' +
                    '<div class="row">' +
                    '<div class="col-xs-6"><p class="authorbox"><a href="'+contrib.authorlink+'" class="authorlink">'+(contrib.username ? contrib.username : 'Akeneo')+'</a></p></div>' +
                    '<div class="col-xs-6"><img class="sourceimage" src="{{ asset('bundles/pimterest/img/') }}'+contrib.source+'.png" /></div>' +
                    '</div>' +
                    '</div>';
        }

        $(window).scroll(function() {
            var wintop = $(window).scrollTop(), docheight = $(document).height(), winheight = $(window).height();
            //Modify this parameter to establish how far down do you want to make the ajax call
            var scrolltrigger = 0.90;
            if ((wintop / (docheight - winheight)) > scrolltrigger) {
                //I added the is_processing variable to keep the ajax asynchronous but avoiding making the same call multiple times
                if (last_page === false && is_processing === false) {
                    addMoreElements();
                }
            }
        });

        is_processing = true;
        startLoading();
        $.get('rest/contributions?page=' + page).then(function(contributions) {
            _.forEach(contributions, function(contrib) {
                var div = cardTemplate(contrib);
                $('#wall').append(div);
            });

            page = page + 1;

            $container.imagesLoaded(function(){
                $container.masonry({
                    itemSelector : '.item',
                    columnWidth : 380,
                    isFitWidth: true
                });
                is_processing = false;
                stopLoading();
            });
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/masonry/3.3.2/masonry.pkgd.min.js"></script>
    <script src="http://imagesloaded.desandro.com/imagesloaded.pkgd.min.js"></script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('bundles/pimterest/ios-loader/css/iosOverlay.css') }}">
{% endblock %}

{% block inline_bodyclass %}gallery{% endblock %}